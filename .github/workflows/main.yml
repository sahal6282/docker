name: CI/CD Pipeline for Docker Deployment

on:
  push:
    branches:
      - main  # Trigger the workflow only for pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t sahal6282/docker:latest .

      # Push the Docker image to DockerHub
      - name: Push Docker image to DockerHub
        run: |
          docker push sahal6282/docker:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job has been completed before deployment

    steps:
      # Checkout the code again to access your SSH configuration
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up SSH for EC2 deployment
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Deploy Docker container to EC2
      - name: Deploy Docker image to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
            # Pull the latest image from DockerHub
            docker pull sahal6282/docker:latest

            # Stop and remove the old container if it exists
            docker stop great_maxwell || echo "No container to stop"
            docker rm great_maxwell || echo "No container to remove"

            # Run the new Docker container
            docker run -d --name modest_dubinsky -p 5000:5000 sahal6282/docker:latest
          EOF
